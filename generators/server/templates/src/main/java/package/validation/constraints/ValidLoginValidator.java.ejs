<%#
 Copyright 2013-2020 the original author or authors from the JHipster project.

 This file is part of the JHipster project, see https://www.jhipster.tech/
 for more information.

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-%>
package <%= packageName %>.validation.contraints;
import org.apache.commons.lang3.StringUtils;

import javax.validation.ConstraintValidator;
import javax.validation.ConstraintValidatorContext;
import java.util.regex.Pattern;

public class ValidLoginValidator implements ConstraintValidator<ValidLogin, String> {

    private Pattern pattern;

    @Override
    public void initialize(ValidLogin constraintAnnotation) {
        this.pattern = Pattern.compile(Constants.LOGIN_REGEX);
    }

    @Override
    public boolean isValid(String login, ConstraintValidatorContext constraintValidatorContext) {

        // We do a manual check if the login is valid to prevent catastrophic backtracking issues
        if (StringUtils.isEmpty(login)) {
            return false;
        }

        if (StringUtils.endsWith(login, "@")) {
            return false;
        }

        // Try to split it at '@'
        String[] split = login.split("@");

        if ( split.length == 1 || split.length == 2) {
            // the input is assumed save for catastrophic backtracking
            return pattern.matcher(login).matches();
        } else {
            // more than one '@'
            return false;
        }
    }
}
