const tsconfig = require('../../../tsconfig.json');

module.exports = {
    preset: 'jest-preset-angular',
    setupFilesAfterEnv: ['<rootDir>/src/test/javascript/jest.ts'],
    coverageDirectory: '<rootDir>/<%= BUILD_DIR %>test-results/',
    globals: {
        'ts-jest': {
            stringifyContentPathRegex: '\\.html$',
            tsConfig: 'tsconfig.json',
            astTransformers: [require.resolve('jest-preset-angular/InlineHtmlStripStylesTransformer')]
        }
    },
    coveragePathIgnorePatterns: [
        '<rootDir>/src/test/javascript'
    ],
    moduleNameMapper: addAliasesFromTypescriptConfig({}),
    reporters: [
        'default',
        [ 'jest-junit', { output: './<%= BUILD_DIR %>test-results/TESTS-results-jest.xml' } ]
    ],
    testResultsProcessor: 'jest-sonar-reporter',
    transformIgnorePatterns: ['node_modules/(?!@angular/common/locales)'],
    testMatch: ['<rootDir>/src/test/javascript/spec/**/@(*.)@(spec.ts)'],
    rootDir: '../../../',
    testURL: 'http://localhost/'
};

function addAliasesFromTypescriptConfig(initialAliases) {
  return Object.keys(tsconfig.compilerOptions.paths).reduce((aliases, aliasName) => {
    const finalAliasName = aliasName.replace(/(.*)(\/\*)$/, '$1/(.*)');
    const finalPath = tsconfig.compilerOptions.paths[aliasName][0].replace(/(.*)(\/\*)$/, '$1/\$ 1').replace(/\/\$ 1$/, '/$1');
    aliases[finalAliasName] = `<rootDir>/${finalPath}`;
    return aliases;
  }, initialAliases);
}
