const tsconfig = require('../../../tsconfig.json');

module.exports = {
  transform: {
    '^.+\\.tsx?$': 'ts-jest'
  },
  rootDir: '../../../',
  testURL: 'http://localhost/',
  coverageDirectory: '<rootDir>/<%= BUILD_DIR %>test-results/',
  testMatch: ['<rootDir>/src/test/javascript/spec/**/@(*.)@(spec.ts?(x))'],
  moduleFileExtensions: ['ts', 'tsx', 'js', 'jsx', 'json', 'node'],
  coveragePathIgnorePatterns: [
    '<rootDir>/src/test/javascript'
  ],
  moduleNameMapper: addAliasesFromTypescriptConfig({
    '\\.(css|scss)$': 'identity-obj-proxy'
  }),
  reporters: [
    'default',
    [ 'jest-junit', { output: './<%= BUILD_DIR %>test-results/TESTS-results-jest.xml' } ]
  ],
  testResultsProcessor: 'jest-sonar-reporter',
  testPathIgnorePatterns: [
    '<rootDir>/node_modules/'
  ],
  setupFiles: [
    '<rootDir>/src/test/javascript/spec/enzyme-setup.ts',
    '<rootDir>/src/test/javascript/spec/storage-mock.ts'
  ],
  snapshotSerializers: ['enzyme-to-json/serializer'],
  globals: {
    'ts-jest': {
      tsConfig: './tsconfig.test.json',
      diagnostics: false
    }
  }
};

function addAliasesFromTypescriptConfig(initialAliases) {
  return Object.keys(tsconfig.compilerOptions.paths).reduce((aliases, aliasName) => {
    const finalAliasName = aliasName.replace(/(.*)(\/\*)$/, '$1/(.*)');
    const finalPath = tsconfig.compilerOptions.paths[aliasName][0].replace(/(.*)(\/\*)$/, '$1/\$ 1').replace(/\/\$ 1$/, '/$1');
    aliases[finalAliasName] = `<rootDir>/${finalPath}`;
    return aliases;
  }, initialAliases);
}
