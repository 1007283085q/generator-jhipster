import Component, { mixins } from 'vue-class-component';
import { mapGetters } from 'vuex';
import axios from 'axios';
import {VERSION} from "../../constants";
import TranslationService from '../../locale/translation.service';
import LoginModalService from '../account/LoginModalService.vue';
import Principal from '../account/principal';
import LanguageService from '../../locale/LanguageService.vue';

@Component({
  computed: mapGetters(['authenticated'])
})
export default class JhiNavbar extends mixins(TranslationService, LoginModalService, Principal, LanguageService) {
  public version: string;
  public swaggerEnabled: boolean;
  public inProduction: boolean;
  public isNavbarCollapsed: boolean;

  constructor() {
    super();
    this.version = VERSION ? 'v' + VERSION : '';
    this.swaggerEnabled = false;
    this.inProduction = false;
    this.isNavbarCollapsed = true;
  }

  created() {
    axios.get('management/info').then((res) => {
      if (res.data && res.data.activeProfiles && res.data.activeProfiles.indexOf('swagger') > -1) {
        this.swaggerEnabled = true;
      }
      if (res.data && res.data.activeProfiles && res.data.activeProfiles.indexOf('prod') > -1) {
        this.inProduction = true;
      }
    });
  }

  public getImageUrl() : boolean {
    return false;
  }

  public collapseNavbar() : void {
    this.isNavbarCollapsed = true;
  }

  public changeLanguage(language) : void {
    this.currentLanguage = language;
  }

  public logout() : void {
    <%_ if (authenticationType === 'jwt') { _%>
    localStorage.removeItem('jhi-authenticationToken');
    sessionStorage.removeItem('jhi-authenticationToken');
    <%_ } _%>
    this.$store.commit('logout');
    this.$router.push('/');
  }
}
