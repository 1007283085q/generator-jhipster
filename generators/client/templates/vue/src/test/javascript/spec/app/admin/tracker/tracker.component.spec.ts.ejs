import { shallowMount, createLocalVue, Wrapper } from '@vue/test-utils';
import axios from 'axios';
import { FontAwesomeIcon } from '@fortawesome/vue-fontawesome';

import * as config from '@/shared/config';
import <%=jhiPrefixCapitalized%>Tracker from '@/admin/tracker/tracker.vue';
import <%=jhiPrefixCapitalized%>TrackerClass from '@/admin/tracker/tracker.component';
import TrackerService from '@/admin/tracker/tracker.service';

const localVue = createLocalVue();
const mockedAxios: any = axios;

config.initVueApp(localVue);
const i18n = config.initI18N(localVue);
const store = config.initVueXStore(localVue);
localVue.component('font-awesome-icon', FontAwesomeIcon);

jest.mock('axios', () => ({
  get: jest.fn()
}));

describe('<%=jhiPrefixCapitalized%>Tracker', () => {
  let wrapper: Wrapper<<%=jhiPrefixCapitalized%>TrackerClass>;
  let <%=jhiPrefix%>Tracker: <%=jhiPrefixCapitalized%>TrackerClass;

  beforeEach(() => {
    mockedAxios.get.mockReturnValue(Promise.resolve({ data: {} }));
    wrapper = shallowMount<<%=jhiPrefixCapitalized%>TrackerClass>(<%=jhiPrefixCapitalized%>Tracker, {
      store,
      i18n,
      localVue,
      provide: {
        trackerService: () => new TrackerService()
      }
    });
    <%=jhiPrefix%>Tracker = wrapper.vm;
  });

  it('should be a Vue instance', () => {
    expect(wrapper.isVueInstance()).toBeTruthy();
  });
});
